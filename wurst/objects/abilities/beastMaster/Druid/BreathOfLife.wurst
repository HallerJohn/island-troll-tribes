package BreathOfLife


// Standard Library Imports:
import ChannelAbilityPreset
import OrderIds
import ClosureEvents
import ClosureTimers

// Local Imports:
import LocalObjectIDs
import TerrainUtils
import LocalAssets
import SimError

let ORDER_ID = Orders.blizzard.toString()
let COOL_DOWN = 30.
let MANA_COST = 15
let BUTTON_POS_X = 2
let BUTTON_POS_Y = 0
let HOTKEY = "E"
let NAME = "Breath of Life"
let TOOLTIP = "Grow bushes at will by breathing life into the ground."
let TOOLTIP_EXT = "Attempt to grow bushes at the target location, must be used on dry ground."

// Life time of the spawns bushes.
let BUSH_DURATION = 30.

// Distance between the center of the bushes.
let BUSH_OFFSET = 150.

// Number of bushes around the center.
let MAX_BUSHES = 4

// ID for the bush destructable.
let BUSH_ID = 'B000'

// Jaccouille
let ICON = LocalIcons.bTNBreathOfLife

// Array of the positions for the bushes around the center point.
vec2 array bushes


@compiletime function createBreathOfLife() returns ChannelAbilityPreset
    return new ChannelAbilityPreset(ABILITY_BREATH_OF_LIFE, 1, true)
    ..setDummyAbility()
    ..presetBaseOrderID(lvl -> ORDER_ID)
    ..presetManaCost(lvl -> MANA_COST)
    ..presetCooldown(lvl -> COOL_DOWN)
    ..setButtonPositionNormalX(BUTTON_POS_X)
    ..setButtonPositionNormalY(BUTTON_POS_Y)
    ..setHotkeyNormal(HOTKEY)
    ..presetTargetTypes(Targettype.POINT)
    ..presetIcon(ICON)
    ..setName(NAME)
    ..setTooltipNormal(1, TOOLTIP)
    ..setTooltipNormalExtended(1, TOOLTIP_EXT)

// Plants the bushes in and around the target position.
function plantBush(vec2 target)

    // Exit if the target position is not on land.
    if not target.isTerrainLand()

        // Notify the player of their mistake.
        simError(EventData.getTriggerUnit().getOwner(), "Must be cast on land.")
        return

    // Determine the positions of the bushes around the center point.
    initializeBushes(target)

    // Iterate through all the side bushes.
    for int i = 0 to MAX_BUSHES

        // If the side bush would be created on land.
        if bushes[i].isTerrainLand()

            // Create the bush.
            let bush = createDestructable(BUSH_ID, bushes[i], angle(0), 1.2, 0)

            // Remove the bush after its lifetime.
            doAfter(BUSH_DURATION) -> 
                bush.remove()

// Used to calculate the positions of the bushes surrounding the target position.
function initializeBushes(vec2 target)
    bushes[0] = target
    bushes[1] = target.add(0, BUSH_OFFSET)
    bushes[2] = target.add(0, -BUSH_OFFSET)
    bushes[3] = target.add(-BUSH_OFFSET, 0)
    bushes[4] = target.add(BUSH_OFFSET, 0)


init
    EventListener.onPointCast(ABILITY_BREATH_OF_LIFE) (unit caster, vec2 target) ->
        plantBush(target)
        
        