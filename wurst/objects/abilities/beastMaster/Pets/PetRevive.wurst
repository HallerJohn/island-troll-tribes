package PetRevive

// Standard library imports:
import ClosureEvents
import AbilityObjEditing
import ClosureTimers
import OrderIds
import MapBounds
import InstantDummyCaster

// Local imports:
import Pets
import LocalObjectIDs
import PlayerExtensions
import ColorUtils
import StringExtensions

// Time before pet revives.
let PET_REVIVE_TIME = 60.

// Small aoe to avoid reviving other units.
let AOE = 1.

// Used to get a random area around map bounds.
let MAP_BOUNDS_OFFSET = 1000.

// Message printed to owner on pet death.
let DEATH_MESSAGE = "Your pet has died. It will revive in {0} seconds.".format(PET_REVIVE_TIME.toString().color(GOLD_COLOR))

@compiletime function createPetRevive() returns AbilityDefinitionPaladinResurrection
    return new AbilityDefinitionPaladinResurrection(ABILITY_PET_REVIVE)
    ..setRaisedUnitsAreInvulnerable(1, false)
    ..setNumberofCorpsesRaised(1, 1)
    ..setAreaofEffect(1, AOE)
    ..setDummyAbility()

function onDeath(unit u)

    // Store the owner of the pet.
    let owner = u.getOwner()

    // Exit if dying unit is not its owner's pet.
    if owner.getPet() != u
        return

    // Notify the owner that their pet died.
    owner.print(DEATH_MESSAGE)

    // To ensure the corpse is moved after the postDeath movement of baby/child rearing animals.
    nullTimer() -> 

        // Random pos around map bounds.
        vec2 targetPos = boundMax
        targetPos.x += GetRandomReal(-MAP_BOUNDS_OFFSET, MAP_BOUNDS_OFFSET)
        targetPos.y += GetRandomReal(-MAP_BOUNDS_OFFSET, MAP_BOUNDS_OFFSET)
        

        // Move the pet to target pos.
        u.setPos(targetPos)

        // Suspend decay of unit's corpse.
        UnitSuspendDecay(u, true)

        // Wait for revive timer.
        doAfter(PET_REVIVE_TIME) -> 

            // Verify that the unit is still the pet of the owner.
            if u == owner.getPet()
                
                // Revive the pet.
                InstantDummyCaster.castImmediate(u.getOwner(), ABILITY_PET_REVIVE, 1, Orders.resurrection, u.getPos())

                // Move the pet back to its owner's troll.
                u.setPos(u.getOwner().getTroll().getPos())


init
    EventListener.add(EVENT_PLAYER_UNIT_DEATH) ->
        onDeath(EventData.getTriggerUnit())