package PetFeeding

// Standard library imports:
import AbilityObjEditing
import ClosureEvents
import Assets
import UpgradeObjEditing
import ObjectIds
import ClosureTimers

// Local imports:
import LocalObjectIDs
import Pets
import PlayerExtensions

let ICON = Icons.bTNCannibalize

@compiletime function createManaDummyUpgrade() returns UpgradeDefinition
    return new UpgradeDefinition(UPGD_PET_EATING_ALLOWED)
    ..setName(1, "Maximum unused upgrade points reached.")

@compiletime function createAbilityFeedPet() returns AbilityDefinitionRaiseDead
    return new AbilityDefinitionRaiseDead(ABILITY_FEED_PET)
    ..setIconNormal(ICON)
    ..setButtonPositionNormalX(1)
    ..setButtonPositionNormalY(1)
    ..setHotkeyNormal("D")
    // The corpse is removed without an effect.
    ..setArtEffect("")
    ..setLevels(1)
    ..presetUnitTypeOne(lvl -> "")
    ..presetUnitsSummonedTypeOne(lvl -> 0)
    ..presetUnitsSummonedTypeTwo(lvl -> 0)
    ..presetManaCost(lvl -> 0)
    ..presetCooldown(lvl -> 0)
    // The radius from which the order can be issued.
    ..presetAreaofEffect(lvl -> 800)
    // The ability is cast at melee range.
    ..presetCastRange(lvl -> 128)
    ..presetTooltipNormal(lvl -> "|c00ffcc00C|r - Eat Corpse")
    ..setRequirements(UPGD_PET_EATING_ALLOWED.toRawCode())
    ..setRequirementsLevels("1")


        
function onCast(unit caster)
    // Exit if the caster is not a pet.
    if not caster.isPet()
        return

    // Grant the pet 1 mana for eating a corpse.
    caster.setMana(caster.getMana() + 1)

    // Check if research needs to be swapped for pet.
    setResearch(caster)

public function setResearch(unit caster)

    // Wait for mana to actually be reduced after casting.
    nullTimer() ->

        // If the pet does not have full mana.
        if not caster.getMana() == caster.getMaxMana()

            // Enable the research to allow eating.
            caster.getOwner().setTechResearched(UPGD_PET_EATING_ALLOWED, 1)

        // If the pet does have full mana.
        else 

            // Disable research so eating is not allowed.
            caster.getOwner().setTechResearched(UPGD_PET_EATING_ALLOWED, 0)

function onTame(player owner)

    // Allow the pet to eat when first tamed.
    owner.setTechResearched(UPGD_PET_EATING_ALLOWED, 1)

init 
    
    EventListener.add(EVENT_PLAYER_UNIT_SPELL_ENDCAST) -> 
        if EventData.getSpellAbilityId() == ABILITY_FEED_PET
            onCast(EventData.getTriggerUnit())
        if EventData.getTriggerUnit().isPet()
            setResearch(EventData.getTriggerUnit())

    EventListener.onCast(ABILITY_PET_TAME) (unit caster) ->
        onTame(caster.getOwner())