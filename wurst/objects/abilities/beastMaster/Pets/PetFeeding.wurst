package PetFeeding

// Standard library imports:
import AbilityObjEditing
import ClosureEvents
import Assets
import SimError
import Orders
import UpgradeObjEditing
import ObjectIdGenerator
import ObjectIds

// Local imports:
import LocalObjectIDs
import Pets

let ICON = Icons.bTNCannibalize

let UPGD_PET_MANA = compiletime(UPGD_ID_GEN.next())

@compiletime function createManaDummyUpgrade() returns UpgradeDefinition
    return new UpgradeDefinition(UPGD_PET_MANA)
    ..setName(1, "Maximum unused upgrade points reached.")

@compiletime function createAbilityFeedPet() returns AbilityDefinitionRaiseDead
    return new AbilityDefinitionRaiseDead(ABILITY_FEED_PET)
    ..setIconNormal(ICON)
    ..setButtonPositionNormalX(1)
    ..setButtonPositionNormalY(1)
    ..setHotkeyNormal("D")
    // The corpse is removed without an effect.
    ..setArtEffect("")
    ..setLevels(1)
    ..presetUnitTypeOne(lvl -> "")
    ..presetUnitsSummonedTypeOne(lvl -> 0)
    ..presetUnitsSummonedTypeTwo(lvl -> 0)
    ..presetManaCost(lvl -> 0)
    ..presetCooldown(lvl -> 0)
    // The radius from which the order can be issued.
    ..presetAreaofEffect(lvl -> 800)
    // The ability is cast at melee range.
    ..presetCastRange(lvl -> 128)
    ..presetTooltipNormal(lvl -> "|c00ffcc00C|r - Eat Corpse")
    ..setRequirements(UPGD_PET_MANA.toRawCode())
    ..setRequirementsLevels("1")


        
function onCast(unit caster)
    // Exit if the caster is not a pet.
    if not caster.isPet()
        return

    // Grant the pet 1 mana for eating a corpse.
    caster.setMana(caster.getMana() + 1)
    setResearch(caster)

function setResearch(unit caster)
    if not caster.isPet()
        return
    if not caster.getMana() == caster.getMaxMana()
        SetPlayerTechResearched(caster.getOwner(), UPGD_PET_MANA, 1)

    else 
        SetPlayerTechResearched(caster.getOwner(), UPGD_PET_MANA, 0)

function onTame(player owner)
    SetPlayerTechResearched(owner, UPGD_PET_MANA, 1)

init 
    // Uses this event so that it triggers once the corpse has been consumed.
    EventListener.add(EVENT_PLAYER_UNIT_SPELL_ENDCAST) -> 
        if EventData.getSpellAbilityId() == ABILITY_FEED_PET
            onCast(EventData.getTriggerUnit())
        if EventData.getTriggerUnit().isPet()
            setResearch(EventData.getTriggerUnit())
    
    EventListener.add(EVENT_PLAYER_UNIT_SPELL_CAST) -> 
        setResearch(EventData.getTriggerUnit())
        
    EventListener.onCast(ABILITY_PET_TAME) (unit caster) ->
        onTame(caster.getOwner())