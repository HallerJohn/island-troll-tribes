package PetReleasing

// Standard library imports:
import ClosureEvents
import ChannelAbilityPreset

// Local imports:
import ColorUtils
import LocalObjectIDs
import LocalAssets
import Pets
import StringExtensions
import Tribe
import ToolTipsUtils
import PlayerExtensions

@compiletime function createReleasePetAbility()
    new ChannelAbilityPreset(ABILITY_PET_RELEASE, 1, true)
        ..setAnimationNames("spell,throw")
        ..setIconNormal(LocalIcons.bTNReleasePet)
        ..setButtonPositionNormalY(1)
        ..setArtCaster("")
        ..setCasterAttachmentPoint("")
        ..setCooldown(1, 5.0)
        ..setFollowThroughTime(1, 1.0)
        ..setName("Release Pet")
        ..setHotkeyNormal("W")
        ..setTooltipNormal(1, makeToolTipNorm("W", "Release Your Pet"))
        ..setTooltipNormalExtended(1, "Releases your pet back into the wild allowing you to tame another. The released pet will become hostile and attack you.")
        ..setRequirements(UPGD_PET_TAMED_TRUE.toRawCode())
        ..setEditorSuffix("(Wurst)")

public function releasePet(unit caster)
    // Look up the pet.
    let originalOwner = caster.getOwner()
    let pet = originalOwner.getPet()

    // Deregister the pet.
    originalOwner.removePet()

    originalOwner.setTechResearched(UPGD_PET_TAMED_TRUE, 0)
    originalOwner.setTechResearched(UPGD_PET_TAMED_FALSE, 1)
    // Revert the available abilities.
    // setPetAbilities(originalOwner, false)

    // Compute the new owner.
    let newOwner = pet.getPetGrowthChain().indexOf(pet.getTypeId()) == 0
        ? PLAYER_NEUTRAL_PASSIVE
        : PLAYER_NEUTRAL_AGGRESSIVE

    // Transfer the ownership of the pet.
    pet.setOwner(Player(newOwner), true)

    // Notify the owning tribe.
    let tribe = Tribe.ofPlayer(originalOwner)
    if tribe != null
        tribe.getMembers().forEach() (player member) ->
            member.print("A pet was released!".color(GENERAL_COLOR))

init
    EventListener.onCast(ABILITY_PET_RELEASE) (unit caster) ->
        releasePet(caster)
