package PetReleasing

// Standard library imports:
import ClosureEvents
import ClosureTimers

// Local imports:
import ColorUtils
import LocalObjectIDs
import PetAbilities
import Pets
import StringExtensions
import Tribe

public function releasePet(unit caster)
    // Look up the pet.
    let originalOwner = caster.getOwner()
    let pet = originalOwner.getPet()

    // Deregister the pet.
    originalOwner.removePet()

    // Revert the available abilities.
    setPetAbilities(originalOwner, false)

    // Compute the new owner.
    let newOwner = pet.getPetGrowthChain().indexOf(pet.getTypeId()) == 0
        ? PLAYER_NEUTRAL_PASSIVE
        : PLAYER_NEUTRAL_AGGRESSIVE

    // Transfer the ownership of the pet.
    pet.setOwner(Player(newOwner), true)

    // Notify the owning tribe.
    let tribe = Tribe.ofPlayer(originalOwner)
    if tribe != null
        tribe.getMembers().forEach() (player member) ->
            member.print("A pet was released!".color(GENERAL_COLOR))

init
    EventListener.onCast(ABILITY_PET_RELEASE) (unit caster) ->
        // Needed to insure stats get properly reset upon release. See PetGrowth.wurst.
        nullTimer() -> 
            releasePet(caster)